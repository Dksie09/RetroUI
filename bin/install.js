#!/usr/bin/env node

const inquirer = require('inquirer');
const fs = require('fs');
const path = require('path');
const chalk = require('chalk');

async function main() {
    console.log(chalk.cyan('ðŸŽ® Setting up pixel-retroui...'));

    const answers = await inquirer.prompt([
        {
            type: 'list',
            name: 'fontChoice',
            message: 'Would you like to use the default Minecraft font?',
            choices: [
                { name: 'Yes, use Minecraft font (default)', value: 'minecraft' },
                { name: 'No, I\'ll use my own fonts', value: 'custom' }
            ],
            default: 'minecraft'
        },
        {
            type: 'list',
            name: 'framework',
            message: 'Which framework are you using?',
            choices: [
                { name: 'Next.js', value: 'nextjs' },
                { name: 'React (Create React App, Vite, etc.)', value: 'react' },
                { name: 'Other', value: 'other' }
            ]
        }
    ]);

    // Handle font choice
    if (answers.fontChoice === 'minecraft') {
        console.log(chalk.green('âœ… Setting up with Minecraft font'));
        setupWithMinecraftFont(answers.framework);
    } else {
        console.log(chalk.green('âœ… Setting up without Minecraft font'));
        setupWithoutMinecraftFont(answers.framework);
    }

    console.log(chalk.cyan('ðŸŽ‰ Setup complete! Enjoy using pixel-retroui!'));
}

function setupWithMinecraftFont(framework) {
    // Create appropriate setup files based on framework
    if (framework === 'nextjs') {
        setupForNextJsWithFont();
    } else if (framework === 'react') {
        setupForReactWithFont();
    } else {
        setupForGenericWithFont();
    }
}

function setupWithoutMinecraftFont(framework) {
    // Create appropriate setup files based on framework
    if (framework === 'nextjs') {
        setupForNextJsWithoutFont();
    } else if (framework === 'react') {
        setupForReactWithoutFont();
    } else {
        setupForGenericWithoutFont();
    }
}

function setupForNextJsWithFont() {
    // Check if src directory exists
    const hasSrcDir = fs.existsSync(path.join(process.cwd(), 'src'));

    // Create the setup file with font imports
    const setupFile = `
  // This file was generated by pixel-retroui setup
  // Import both core styles and font styles
  import 'pixel-retroui/dist/index.css';
  import 'pixel-retroui/dist/fonts.css';
  
  // You can use the Minecraft font in your Tailwind classes:
  // className="font-minecraft"
  `;

    // Determine the base path for creating the lib directory
    const basePath = hasSrcDir ? path.join(process.cwd(), 'src') : process.cwd();
    const libDir = path.join(basePath, 'lib');

    // Create lib directory if it doesn't exist
    if (!fs.existsSync(libDir)) {
        fs.mkdirSync(libDir, { recursive: true });
    }

    // Create the setup file in the lib directory
    fs.writeFileSync(path.join(libDir, 'pixel-retroui-setup.js'), setupFile);

    console.log(chalk.green('âœ… Setup with Minecraft font complete!'));

    if (hasSrcDir) {
        console.log(chalk.blue('Created src/lib/pixel-retroui-setup.js'));
        console.log(chalk.yellow('\nImport the setup file with:'));
        console.log(chalk.cyan('import "@/lib/pixel-retroui-setup.js"; // In your layout or page files'));
    } else {
        console.log(chalk.blue('Created lib/pixel-retroui-setup.js'));
        console.log(chalk.yellow('\nImport the setup file with:'));
        console.log(chalk.cyan('import "@/lib/pixel-retroui-setup.js"; // In your layout or page files'));
    }

    // Check if tsconfig.json or jsconfig.json exists and has paths configured
    let configFound = false;
    const tsConfigPath = path.join(process.cwd(), 'tsconfig.json');
    const jsConfigPath = path.join(process.cwd(), 'jsconfig.json');

    if (fs.existsSync(tsConfigPath)) {
        configFound = true;
        console.log(chalk.yellow('\nMake sure your tsconfig.json includes this path configuration:'));
    } else if (fs.existsSync(jsConfigPath)) {
        configFound = true;
        console.log(chalk.yellow('\nMake sure your jsconfig.json includes this path configuration:'));
    }

    if (configFound) {
        console.log(chalk.cyan(`
  {
    "compilerOptions": {
      "paths": {
        "@/*": ["${hasSrcDir ? "./src/*" : "./*"}"]
      }
    }
  }
  `));
    } else {
        console.log(chalk.yellow('\nCreate a tsconfig.json or jsconfig.json with this configuration:'));
        console.log(chalk.cyan(`
  {
    "compilerOptions": {
      "paths": {
        "@/*": ["${hasSrcDir ? "./src/*" : "./*"}"]
      }
    }
  }
  `));
    }
}

function setupForNextJsWithoutFont() {
    // Check if src directory exists
    const hasSrcDir = fs.existsSync(path.join(process.cwd(), 'src'));

    // Create the setup file without font imports
    const setupFile = `
  // This file was generated by pixel-retroui setup
  // Import only core styles (no Minecraft font)
  import 'pixel-retroui/dist/index.css';
  
  // For NextJS, you can use your own font with:
  // import { yourFont } from 'next/font/google' or 'next/font/local'
  // And then use it in your layout with className={yourFont.className}
  `;

    // Determine the base path for creating the lib directory
    const basePath = hasSrcDir ? path.join(process.cwd(), 'src') : process.cwd();
    const libDir = path.join(basePath, 'lib');

    // Create lib directory if it doesn't exist
    if (!fs.existsSync(libDir)) {
        fs.mkdirSync(libDir, { recursive: true });
    }

    // Create the setup file in the lib directory
    fs.writeFileSync(path.join(libDir, 'pixel-retroui-setup.js'), setupFile);

    console.log(chalk.green('âœ… Setup without Minecraft font complete!'));

    if (hasSrcDir) {
        console.log(chalk.blue('Created src/lib/pixel-retroui-setup.js'));
        console.log(chalk.yellow('\nImport the setup file with:'));
        console.log(chalk.cyan('import "@/lib/pixel-retroui-setup.js"; // In your layout or page files'));
    } else {
        console.log(chalk.blue('Created lib/pixel-retroui-setup.js'));
        console.log(chalk.yellow('\nImport the setup file with:'));
        console.log(chalk.cyan('import "@/lib/pixel-retroui-setup.js"; // In your layout or page files'));
    }

    // Check if tsconfig.json or jsconfig.json exists and has paths configured
    let configFound = false;
    const tsConfigPath = path.join(process.cwd(), 'tsconfig.json');
    const jsConfigPath = path.join(process.cwd(), 'jsconfig.json');

    if (fs.existsSync(tsConfigPath)) {
        configFound = true;
        console.log(chalk.yellow('\nMake sure your tsconfig.json includes this path configuration:'));
    } else if (fs.existsSync(jsConfigPath)) {
        configFound = true;
        console.log(chalk.yellow('\nMake sure your jsconfig.json includes this path configuration:'));
    }

    if (configFound) {
        console.log(chalk.cyan(`
  {
    "compilerOptions": {
      "paths": {
        "@/*": ["${hasSrcDir ? "./src/*" : "./*"}"]
      }
    }
  }
  `));
    } else {
        console.log(chalk.yellow('\nCreate a tsconfig.json or jsconfig.json with this configuration:'));
        console.log(chalk.cyan(`
  {
    "compilerOptions": {
      "paths": {
        "@/*": ["${hasSrcDir ? "./src/*" : "./*"}"]
      }
    }
  }
  `));
    }
}

function setupForReactWithFont() {
    const setupFile = `
// This file was generated by pixel-retroui setup
// Import both core styles and font styles
import 'pixel-retroui/dist/index.css';
import 'pixel-retroui/dist/fonts.css';

// You can use the Minecraft font in your app:
// className="font-minecraft"
`;

    fs.writeFileSync(path.join(process.cwd(), 'pixel-retroui-setup.js'), setupFile);
    console.log(chalk.blue('Created pixel-retroui-setup.js - import this in your App.js or index.js'));
}

function setupForReactWithoutFont() {
    const setupFile = `
// This file was generated by pixel-retroui setup
// Import only core styles (no Minecraft font)
import 'pixel-retroui/dist/index.css';

// You'll need to set up your own font for the components
`;

    fs.writeFileSync(path.join(process.cwd(), 'pixel-retroui-setup.js'), setupFile);
    console.log(chalk.blue('Created pixel-retroui-setup.js - import this in your App.js or index.js'));
}

function setupForGenericWithFont() {
    const setupFile = `
// This file was generated by pixel-retroui setup
// In your HTML, add:
// <link rel="stylesheet" href="node_modules/pixel-retroui/dist/index.css">
// <link rel="stylesheet" href="node_modules/pixel-retroui/dist/fonts.css">

// Or import in your JS:
import 'pixel-retroui/dist/index.css';
import 'pixel-retroui/dist/fonts.css';
`;

    fs.writeFileSync(path.join(process.cwd(), 'pixel-retroui-setup.js'), setupFile);
    console.log(chalk.blue('Created pixel-retroui-setup.js - see instructions inside'));
}

function setupForGenericWithoutFont() {
    const setupFile = `
// This file was generated by pixel-retroui setup
// In your HTML, add:
// <link rel="stylesheet" href="node_modules/pixel-retroui/dist/index.css">

// Or import in your JS:
import 'pixel-retroui/dist/index.css';

// You'll need to set up your own fonts for the components
`;

    fs.writeFileSync(path.join(process.cwd(), 'pixel-retroui-setup.js'), setupFile);
    console.log(chalk.blue('Created pixel-retroui-setup.js - see instructions inside'));
}

main().catch(err => {
    console.error(chalk.red('Error during setup:'), err);
    process.exit(1);
});